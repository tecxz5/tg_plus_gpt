import telebot
import logging
from telebot import types
from yandex_gpt import PyYandexGpt
from database_YaGPT import Tokens
from database_history import History
from config import TOKEN, WHITELISTED_USERS, IAM_TOKEN, FOLDER_ID

bot = telebot.TeleBot(TOKEN)
dbt = Tokens("tokens.db")
dbh = History("history.db")
logging.basicConfig(level=logging.DEBUG)

def is_user_whitelisted(chat_id): # –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ /whitelist –∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–µ
    return chat_id in WHITELISTED_USERS

@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    user_name = message.from_user.first_name
    bot.send_message(chat_id,
                     text=f"""
–ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Ç–≤–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∏–ª–∏ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ –ø–∏—Å–∞—Ç–µ–ª—è –∏—Å—Ç–æ—Ä–∏–π, –Ω–æ –Ω–µ –æ–± —ç—Ç–æ–º, —Ç—ã –º–Ω–µ –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ, —è –Ω–∞ —Ç–µ –∏ —Ç–µ –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å, –∫—Ä—É–∂–∫–∏ –Ω–µ –ø—Ä–æ–±—É–π, –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ, —è —Ç–≤–æ–µ–≥–æ —Å–ª–æ–≤–∞ –∂–¥—Éüòâ""")

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id,
                      text="""
–í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ YaGPT, –∏ –∏–∑-–∑–∞ —ç—Ç–æ–≥–æ –Ω–µ –≤—Å–µ –º–æ–≥—É—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —Ç–µ–∫—Å—Ç–∞, —Ç–∞–∫ —á—Ç–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –µ—Å–ª–∏ –≤—ã –Ω–µ –∏–∑ —ç—Ç–∏—Ö –ª—é–¥–µ–π
–¢–∞–∫ –∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ –≤—ã –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /whitelist""")

@bot.message_handler(commands=['whitelist'])
def whitelist(message):
    chat_id = message.chat.id
    if is_user_whitelisted(chat_id):
        bot.send_message(chat_id, '–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ YaGPT')
    else:
        bot.send_message(chat_id, '–£ –≤–∞—Å –Ω–µ—Ç—É –¥–æ—Å—Ç—É–ø–∞ –∫ YaGPT')

@bot.message_handler(commands=['stt'])
def stt(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, f"–ö–æ–º–∞–Ω–¥–∞-–ø—É—Å—Ç—ã—à–∫–∞")

@bot.message_handler(commands=['tts'])
def tts(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, f"–ö–æ–º–∞–Ω–¥–∞-–ø—É—Å—Ç—ã—à–∫–∞")

@bot.message_handler(commands=['debug'])
def debug(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, f"–ö–æ–º–∞–Ω–¥–∞-–ø—É—Å—Ç—ã—à–∫–∞")

@bot.message_handler(commands=['clear'])
def clear(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, f"–ö–æ–º–∞–Ω–¥–∞-–ø—É—Å—Ç—ã—à–∫–∞")

@bot.message_handler(commands=['tokens'])
def tokens_handler(message):
    chat_id = message.chat.id
    tokens_used = dbt.get_tokens_used(chat_id)
    bot.send_message(chat_id, f"–ö–æ–º–∞–Ω–¥–∞-–ø—É—Å—Ç—ã—à–∫–∞")

@bot.message_handler(commands=['symbols'])
def symbols_handler(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, f"–ö–æ–º–∞–Ω–¥–∞-–ø—É—Å—Ç—ã—à–∫–∞")

@bot.message_handler(commands=['blocks'])
def blocks_handler(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, f"–ö–æ–º–∞–Ω–¥–∞-–ø—É—Å—Ç—ã—à–∫–∞")


@bot.message_handler(content_types=['text'])
def text_reply(message):
    bot.send_message(message.chat.id, '–Ø —Ç–µ–±–µ –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–π –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–π —Ñ—Ä–∞–∑–æ–πüòä')

@bot.message_handler(content_types=['voice'])
def voice_reply(message):
    bot.send_message(message.chat.id, "–ü–æ–∫–∞ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã–º —è –Ω–µ –º–æ–≥—Éüò•")

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    logging.info("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    bot.polling()